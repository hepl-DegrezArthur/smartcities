<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Galerie des images du nichoir</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 0;
            padding: 20px;
        }

        h1 {
            margin-bottom: 10px;
        }

        #battery-status {
            font-size: 18px;
            font-weight: bold;
            color: #007BFF;
            margin-bottom: 20px;
        }

        .gallery {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
        }

        .image-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 200px;
        }

        .gallery img {
            width: 100%;
            height: auto;
            border: 2px solid #ccc;
            border-radius: 5px;
            transition: transform 0.2s;
        }

        .gallery img:hover {
            transform: scale(1.1);
        }

        .image-time {
            font-size: 12px;
            color: #555;
            margin-top: 5px;
        }

        .delete-button {
            margin-top: 20px;
            padding: 10px 20px;
            background-color: #FF4D4D;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .delete-button:hover {
            background-color: #FF1A1A;
        }

        input[type="checkbox"] {
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <h1>Galerie des images du nichoir</h1>
    <div id="battery-status">Niveau de batterie : En cours de chargement...</div>
    <div class="gallery">
        <!-- Les images seront ajoutées ici par JavaScript -->
    </div>
    <button id="delete-selected" class="delete-button">Supprimer les images sélectionnées</button>

<script>
    const gallery = document.querySelector('.gallery');
    const batteryStatus = document.getElementById('battery-status');
    const deleteButton = document.getElementById('delete-selected');

    // Charger le dernier niveau de batterie depuis le fichier "battery_log.txt"
    fetch(`battery_log.txt?nocache=${Date.now()}`, { cache: 'no-store' })
    .then(response => {
        if (!response.ok) {
            throw new Error('Erreur lors de la récupération du fichier de niveau de batterie');
        }
        return response.text();
    })
        .then(batteryLog => {
            // Récupérer la dernière ligne
            const lines = batteryLog.trim().split('\n');
            const lastLine = lines[lines.length - 1];

            // Extraire le niveau de batterie de la dernière ligne
            const batteryMatch = lastLine.match(/Niveau de batterie : (\d+)%/);
            if (batteryMatch) {
                const lastBatteryLevel = batteryMatch[1];
                batteryStatus.textContent = `Niveau de batterie : ${lastBatteryLevel}%`;
            } else {
                batteryStatus.textContent = "Erreur : Format de niveau de batterie non reconnu";
            }
        })
        .catch(error => {
            console.error('Erreur lors de l\'actualisation du niveau de batterie :', error);
            batteryStatus.textContent = "Erreur lors de l'actualisation du niveau de batterie";
        });

    // Charger dynamiquement les images
    fetch('list_images.php')
        .then(response => response.json())
        .then(imageFiles => {
            if (imageFiles.length > 0) {
                // Trier les images par timestamp décroissant
                imageFiles.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));

                // Ajouter les images à la galerie
                imageFiles.forEach(file => {
                    const { fileName, timestamp } = file;

                    // Créer un conteneur pour l'image
                    const container = document.createElement('div');
                    container.className = 'image-container';

                    // Créer l'élément image
                    const img = document.createElement('img');
                    img.src = fileName;
                    img.alt = `Image ${fileName}`;
                    img.onerror = () => container.remove();

                    // Ajouter l'heure d'arrivée
                    const timeText = document.createElement('div');
                    timeText.className = 'image-time';
                    timeText.textContent = `Arrivée : ${new Date(timestamp).toLocaleString()}`;

                    // Ajouter une case à cocher
                    const checkbox = document.createElement('input');
                    checkbox.type = 'checkbox';
                    checkbox.value = fileName;

                    // Ajouter les éléments au conteneur
                    container.appendChild(img);
                    container.appendChild(timeText);
                    container.appendChild(checkbox);
                    gallery.appendChild(container);
                });
            } else {
                // Afficher un message si aucune image n'est trouvée
                const noImagesMessage = document.createElement('p');
                noImagesMessage.textContent = "Aucune image trouvée.";
                noImagesMessage.style.color = "#555";
                gallery.appendChild(noImagesMessage);
            }
        })
        .catch(error => {
            console.error('Erreur lors de la récupération des images :', error);
            const noImagesMessage = document.createElement('p');
            noImagesMessage.textContent = "Erreur lors de l'affichage des images.";
            noImagesMessage.style.color = "#555";
            gallery.appendChild(noImagesMessage);
        });

    // Gérer la suppression des images sélectionnables
    deleteButton.addEventListener('click', () => {
        const selectedCheckboxes = document.querySelectorAll('.gallery input[type="checkbox"]:checked');
        const filesToDelete = Array.from(selectedCheckboxes).map(cb => cb.value);

        if (filesToDelete.length === 0) {
            alert("Aucune image sélectionnée !");
            return;
        }

        // Envoyer une requête pour chaque fichier
        Promise.all(filesToDelete.map(fileName =>
            fetch(`delete_image.php?fileName=${fileName}`, { method: 'DELETE' })
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Erreur de suppression pour ${fileName}`);
                    }
                })
        ))
            .then(() => {
                // Supprimer les images de la galerie
                selectedCheckboxes.forEach(checkbox => checkbox.parentElement.remove());
                alert("Images supprimées avec succès !");
            })
            .catch(error => {
                console.error('Erreur lors de la suppression des images :', error);
                alert("Erreur lors de la suppression de certaines images.");
            });
    });
</script>
</body>
</html>
